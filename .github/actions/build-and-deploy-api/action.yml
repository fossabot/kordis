name: 'build-and-deploy-api'
description: 'Builds API Project for Production and Deploys it to a given WA Slot'

inputs:
  releaseVersion:
    required: true
    description: "Release Version (Commit or Tag)"
  slot:
    required: true
    description: "Slot Identifier"
  mongoUri:
    required: true
    description: "Mongo Connection URI"
  sentryKey:
    required: true
    description: "Sentry DSN Key"
  sentryAuthToken:
    required: true
    description: "Sentry Auth Token"
  aadb2cExtensionAppId:
    required: false
    description: "Azure AD B2C App ID for the Extension App"
  aadb2cTenant:
    required: false
    description: "Azure AD B2C tenant"
  aadb2cClientId:
    required: false
    description: "Azure AD B2C Client ID"
  aadb2cClientSecret:
    required: false
    description: "Azure AD B2C Client Secret"
outputs:
  url:
    description: "API URL"
    value: ${{ steps.wa-deployment.outputs.webapp-url }}

runs:
  using: "composite"
  steps:

    - run: envsubst < apps/api/src/.env.template > apps/api/src/.env
      env:
        MONGODB_URI: ${{ inputs.mongoUri }}
        ENVIRONMENT_NAME: ${{ inputs.slot }}
        RELEASE_VERSION: ${{ inputs.releaseVersion }}
        SENTRY_KEY: ${{ inputs.sentryKey }}
        AADB2C_TENANT: ${{ inputs.aadb2cTenant }}
        AADB2C_EXTENSION_APP_ID: ${{ inputs.aadb2cExtensionAppId }}
        AADB2C_CLIENT_ID: ${{ inputs.aadb2cClientId }}
        AADB2C_CLIENT_SECRET: ${{ inputs.aadb2cClientSecret }}
      shell: bash
    - run: |
        npx nx build api --prod
        cd dist/apps/api
        npm i --omit=dev --ignore-scripts
      shell: bash
    - name: Deploy API
      id: wa-deployment
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'kordis-api'
        slot-name: ${{ inputs.slot }}
        package: dist/apps/api/
    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ inputs.sentryAuthToken }}
        SENTRY_ORG: kordis-leitstelle
        SENTRY_PROJECT: kordis-api
      with:
        environment: ${{ inputs.slot }}
        version: ${{ inputs.releaseVersion }}
        sourcemaps: ./dist/apps/api
